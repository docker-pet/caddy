name: Build and Release Caddy

on:
  workflow_run:
    workflows: ["Check plugin updates"]
    types:
      - completed
  push:
    paths:
      - go.mod
      - go.sum
      - Dockerfile
      - .github/workflows/build-and-release.yml
    branches:
      - main

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.tag.outputs.version }}
    steps:
      - uses: actions/checkout@v4

      - name: Check if last commit is from dependency update
        id: check
        run: |
          COMMIT_MSG=$(git log -1 --pretty=%B)
          echo "Last commit message: $COMMIT_MSG"
          if [[ "$COMMIT_MSG" == *"chore(deps): update Caddy plugins"* ]]; then
            echo "trigger_build=true" >> $GITHUB_OUTPUT
          else
            echo "trigger_build=false" >> $GITHUB_OUTPUT
          fi

      - name: Exit if not a dependency update
        if: steps.check.outputs.trigger_build == 'false' && github.event_name == 'workflow_run'
        run: |
          echo "No dependency update detected, skipping build."
          exit 0

      - name: Extract version & bump
        id: tag
        run: |
          git fetch --tags
          LATEST=$(git tag --sort=-v:refname | head -n 1 | sed 's/v//')
          [ -z "$LATEST" ] && LATEST="0.0.0"
          IFS='.' read -r MAJOR MINOR PATCH <<< "$LATEST"
          PATCH=$((PATCH + 1))
          NEW_TAG="v$MAJOR.$MINOR.$PATCH"
          echo "version=$NEW_TAG" >> $GITHUB_OUTPUT

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/caddy:latest
            ghcr.io/${{ github.repository_owner }}/caddy:${{ steps.tag.outputs.version }}
          platforms: |
            linux/amd64
            linux/arm64

      - name: Create Git tag
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git tag ${{ steps.tag.outputs.version }}
          git push origin ${{ steps.tag.outputs.version }}
